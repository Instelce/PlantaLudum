

.button {
  position: relative;
  display: inline-block;

  background: transparent;
  font-size: inherit;

  transition: transform .3s ease;
  cursor: pointer;

  &:not(:disabled) {
    &:active {
      animation: bounce .3s ease forwards;
      filter: drop-shadow(0 0 4px rgba(var(--color-gray-4), .4));

      &::after {
        animation: after-bounce .3s ease forwards;
      }
    }

    &:hover {
      transform: translateY(-2px);

      &::after {
        transform: translateY(4px);
      }
    }
  }

  &:disabled {
    opacity: .8;
    cursor: not-allowed;
  }

  // Colors
  &.primary {
    --color-text: rgb(var(--color-gray-2));
    --color-background: rgb(var(--color-primary-light));
    --color-border: rgb(var(--color-primary-dark))
  }

  &.gray {
    --color-text: rgb(var(--color-white));
    --color-background: rgb(var(--color-gray-4));
    --color-border: rgb(var(--color-gray-3))
  }

  &.dark-gray {
    --color-text: rgb(var(--color-white));
    --color-background: rgb(var(--color-gray-2));
    --color-border: rgb(var(--color-gray-3))
  }

  &.yellow {
    --color-text: rgb(var(--color-yellow-dark));
    --color-background: rgb(var(--color-yellow-light));
    --color-border: rgb(var(--color-yellow-dark))
  }

  &.danger {
    --color-text: rgb(var(--color-gray-4));
    --color-background: rgb(var(--color-danger-light));
    --color-border: rgb(var(--color-danger-dark))
  }

  &.success {
    --color-text: rgb(var(--color-gray-4));
    --color-background: rgb(var(--color-success-light));
    --color-border: rgb(var(--color-success-dark))
  }

  .label {
    position: relative;
    z-index: 2;
    color: var(--color-text);
    font-weight: 500;
  }

  &::before,
  &::after {
    content: "";
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    border-radius: var(--radius);
    //background: paint(squircle);
    transition: transform .3s ease, background .3s ease;
  }

  &::before {
    background: var(--color-background);
    //--squircle-fill: var(--color-background);
    //--squircle-radius: var(--radius);
    //--squircle-smooth: 1;
    z-index: 2;
  }

  &::after {
    background: var(--color-border);
    transform: translateY(2px);
    //--squircle-fill: var(--color-border);
    //--squircle-radius: var(--radius);
    //--squircle-smooth: 1;
  }

  &.icon {
    display: flex;
    align-items: center;
    justify-content: space-between;

    &:not(&.only-icon) > span:nth-child(2) {
      display: flex;
      margin-left: 1rem;
    }

    span:nth-child(2){
      width: 20px;
      height: 20px;

      display: flex;
      align-items: center;

      svg {
        z-index: 3;
        stroke: var(--color-text);
      }
    }
  }

  &.loading {
    .loader {
      width: 20px;
      height: 20px;
      position: absolute;
      top: 50%;
      left: 50%;
      translate: -50% -50%;
    }
  }

  &.fill {
    width: 100%;
  }

  &.small {
    padding: .375em 1em;
    --padding-horizontal: .375em;

    &.only-icon { padding: .375em; }
  }
  &.medium {
    --padding-horizontal: .5em;
    padding: .5em 1.5em;

    &.only-icon { padding: .5em; }
  }
  &.large {
    padding: 1em 2em;
    --padding-horizontal: 1em;

    &.only-icon { padding: 1em; }
  }
}

.button-link {
  width: fit-content;
  height: fit-content;
  display: flex;
  position: relative;
}

@keyframes bounce {
  0% {
    transform: translateY(0);
  }

  100% {
    transform: translateY(-2px);
  }
}

@keyframes after-bounce {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(4px);
  }
}